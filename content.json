{"pages":[{"title":"about","text":"그냥 편한대로 부르세요 방송국에서 구르던 짬바로 개발하기제 장래희망은요","link":"/about/index.html"}],"posts":[{"title":"mac OS 개발환경 구축하기","text":"mac mini m1 specMac mini(M1, 2020), 16gb memory, 512gb ssd OS Updateinstall xcode command line tools맥에 기본적으로 설치되어있는 터미널을 실행시킨 뒤, 적당히 git 같은 터미널 명령어를 입력한다.(git이 설치되어 있지 않아도 상관 없음)그러면 자동으로 팝업창이 뜨면서, Command Line Tools를 설치할 것인지 묻는데 다운로드해서 설치해주면 끝. install Homebrew1/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot; 솔직히 homebrew까지 설치했다면 개발환경 구축은 거의 다 끝난 것이나 다름 없다.여기서부턴 brew list 해서 나온 패키지 목록들.(2022-03-25) formulae bat fzf git gh: GitHub on the command line gnupg himalaya: email client on cli. vim 플러그인과 연동해서 간단하게 메일 확인하기에 좋다. node pandoc ranger: vim inspired command line file explorer ripgrep tmux trash: move files to trash in terminal. ranger와 연계해서 사용 universal-ctags: for tagbar vim plugin w3m: text-based browser xsel: for yank from ranger to clipboard casks discord iterm2 firefox jumpcut: clipboard management tool karabiner-elements: keyboard remapping obsidian raspberry-pi-imager rectangle slack visual-studio-code webstorm basic settings on macOS기본적인 설정은 첫 부팅할 때 잘 해주지만(ex 로케일 설정 등…리눅스에서 건너오니 역시 이렇게 편할 수가 없었다….ㅜ) 그 외에도 소소하게 설정이 필요한 부분이 있었다. 사실 하나하나 눌러보면서 설정하면 그만인 부분들이지만 키보드 설정에서 하나를 빼먹었길래 메모해둔다.키보드&gt;단축키 탭에서 하단의 키보드 탐색을 사용하여 컨트롤 간에 초점 이동에 체크. keyboard remapping현재 사용하고 있는 키보드는 레오폴드 FC900R 스탠다드 측각 제품이다.개인적으로 해피해킹 키보드 레이아웃을 좋아해서 윈도우, 리눅스, 맥 환경에서 각각 비슷하게 흉내낸 레이아웃을 리맵핑 해 사용하고 있다.그냥 해피해킹을 사면 해결되는 일이지만….. 아무튼 키보드 후면의 딥스위치를 사용해 1차적으로 물리적 리맵핑을 하고,나머지는 상단의 brew list에서도 볼 수 있는 karabiner를 사용하고 있다.Vim을 사용하는 일이 많은데 vim은 컨트롤 키를 컨트롤 그대로 인식하기 때문에 karabiner 프로필을 Vim용과 아닌 것으로 두 개 만들었다. 차이는 cmd와 ctrl의 스위칭이 있냐 없냐의 차이 뿐이다. DIP switch1번 on: LCtrl &lt;-&gt; CapsLock2번 on: LAlt &lt;-&gt; Win3번 off: Win &lt;-&gt; Fn4번 off: kill win key karabiner settings from key to key application sticky fn backslash \\ delete or backspace caps lock grave accent and tilde ~ delete or backspace backslash \\ escape caps lock grave accent and tilde ~ escape right control apple vendor keyboard key code language function keys to key f3 mission control f4 launchpad f5 spotlight f10 mute f11 volume decrement f12 volume increment 결국 esc자리에 CapsLock이, 백틱 자리에 esc가, CapsLock 자리에 LCtrl이, LCtrl 자리에 백틱이 들어가게 된다.백스페이스도 백슬래시와 스위칭해 이정도면 얼추 해피해킹과 비슷한 레이아웃이 아닌가 싶다.재택 근무라 키보드 하나로 여러 os에 연결해 사용하기 때문에, 사소하게 다른 부분들도 있지만 esc, LCtrl, Back Space가 핵심이기 때문에 크게 불만은 없다.다만 레오폴드의 fn키는, 하드웨어 단계에서 F1~F12의 키들과 조합하기 때문에 windows를 제외한 linux, mac os에서는 아예 키 입력이 인식조차 되지 않는다.결국 키보드의 키 하나가 죽는 셈인데, 오른쪽 컨트롤 키를 잘 쓰지 않으니 처음에는 우클릭키와 RCtrl을 각각 fn키와 언어 변환 키(애플 키보드 보면 지구본 모양인 그 키)로 리맵핑했다.다만 그렇게 리맵핑한 fn키를 누를 때마다 언어 변환도 계속 같이 되는 바람에 fn키는 결국 sticky fn으로 리맵핑하게 되었다.어차피 런치패드와 mission control 외에는 펑션키들을 잘 쓰지 않기도 하고 크게 불편함은 없다.","link":"/2022/02/09/1_devEnv/"}],"tags":[{"name":"homebrew","slug":"homebrew","link":"/tags/homebrew/"},{"name":"keyboard","slug":"keyboard","link":"/tags/keyboard/"},{"name":"remapping","slug":"remapping","link":"/tags/remapping/"},{"name":"setup","slug":"setup","link":"/tags/setup/"}],"categories":[{"name":"dev","slug":"dev","link":"/categories/dev/"}]}